# Runs on push to feature branches and main
name: 'Deploy Development on Push to Main'

on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
      - 'dev.tfvars'

env:
  TF_LOG: INFO
  TF_INPUT: false
  TF_IN_AUTOMATION: true
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ENVIRONMENT: dev

jobs:
  terraform:
    name: 'Terraform Apply on Push'
    runs-on: ubuntu-latest

    # Use the Bash shell
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the preferred version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.8.3"

    # Run Terraform init
    - name: Terraform Init
      id: init
      run: terraform init -backend-config="key=${ENVIRONMENT}.tfstate"

    # Log into Azure to execute CLI commands
    - name: Azure Login
      uses: Azure/login@v2
      with:
        creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

    # Copy plan file to Azure Storage
    - name: Azure File Copy
      id: azure-file-copy
      uses: Azure/cli@v1
      with:
        inlineScript: |
          SA_NAME=$(cat .terraform/terraform.tfstate | jq -r .backend.config.storage_account_name)
          CONTAINER_NAME=$(cat .terraform/terraform.tfstate | jq -r .backend.config.container_name)
          az storage blob download --account-name $SA_NAME --container $CONTAINER_NAME --file "${ENVIRONMENT}.tfplan" --name "${ENVIRONMENT}.tfplan" --auth-mode key
          az storage blob delete --account-name $SA_NAME --container $CONTAINER_NAME --name "${ENVIRONMENT}.tfplan" --delete-snapshots include --auth-mode key

    # Run Terraform apply
    - name: Terraform Apply
      id: apply
      run: terraform apply ${ENVIRONMENT}.tfplan